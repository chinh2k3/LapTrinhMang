/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package baitapio_02;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;

import java.nio.*;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author Admin
 */
public class CreateFile extends javax.swing.JFrame {

    private File logFile;

    /**
     * Creates new form CreateFile
     */
    public CreateFile() {
        openLog();

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    //log: ghi lại lich sử mà người dùng đã làm những gì trong với ứng dụng
    public void openLog() {
        try {
            String pathLog = "C:\\Users\\Admin\\OneDrive\\Documents\\NetBeansProjects\\baiTap";
            this.logFile = new File(pathLog);
            if (!this.logFile.exists()) {
                this.logFile.createNewFile();
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }

    public void ouputLog() {
        try {
            FileInputStream fis = new FileInputStream(this.logFile);
            InputStreamReader isr = new InputStreamReader(fis, StandardCharsets.UTF_8);
            BufferedReader br = new BufferedReader(isr);
            String result = "";
            String line = "";
            while ((line = br.readLine()) != null) {
                result += line;
                result += "\n";
            }
            jTextPane1.setText(result);
        } catch (Exception ex) {
            ex.printStackTrace();
            writeLog(ex.getMessage());
        }

    }

    public void writeLog(String msg) {
        try {
            FileOutputStream fos = new FileOutputStream(this.logFile, true);
            OutputStreamWriter ows = new OutputStreamWriter(fos, StandardCharsets.UTF_8);
            BufferedWriter bw = new BufferedWriter(ows);
            //lay ra thoi gian
            LocalDateTime currentDateTime = LocalDateTime.now();
            DateTimeFormatter forMat = DateTimeFormatter.ofPattern("yyyy-MM-dd");
            String time = currentDateTime.format(forMat);
            String user = "USER";
            bw.append("\n" + time + " " + user + " " + msg);
            bw.flush();
            bw.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jButtonDelete = new javax.swing.JButton();
        jButtonRename = new javax.swing.JButton();
        jButtonCopy = new javax.swing.JButton();
        jButtonMove = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButtonLog = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("PathFile");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 26, 80, 30));
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20, 410, 50));
        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        jScrollPane2.setViewportView(jTextPane1);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 710, 280));

        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 380, 80, 30));

        jButtonRename.setText("Rename");
        jButtonRename.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRenameActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonRename, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 380, -1, 30));

        jButtonCopy.setText("Copy");
        jButtonCopy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCopyActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonCopy, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 380, 80, 30));

        jButtonMove.setText("Move");
        getContentPane().add(jButtonMove, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 380, 90, 30));

        jButton5.setText("Create");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 20, 110, 40));

        jButtonLog.setText("Log");
        jButtonLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLogActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonLog, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 380, 90, 30));

        jMenu1.setText("File");

        jMenuItem1.setText("File");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);
        jMenu1.add(jSeparator1);

        jMenuItem2.setText("Exit");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);//chọn kiểu file để mở là tập tin hay thư mục
        int result = fileChooser.showOpenDialog(this);//chọn cửa sổ để hiện filechooser
        if (result == JFileChooser.APPROVE_OPTION) {
            String path = fileChooser.getSelectedFile().getAbsolutePath();
            jTextField1.setText(path);
            jTextPane1.setText(listFile(path, 0));
        }
        writeLog("Mo" + jTextField1.getText());
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        // TODO add your handling code here:
        int choose = JOptionPane.showConfirmDialog(this, "Are you sure delete all item?");
        if (choose == JOptionPane.NO_OPTION) {
            return;
        }
        try {
            String path = jTextField1.getText();
            File myFile = new File(path);
            deleteFile(path);

        } catch (Exception ex) {

        }
        writeLog("xoa thanh cong" + jTextField1.getText());
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonRenameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRenameActionPerformed
        // TODO add your handling code here:
        String newFileName = JOptionPane.showInputDialog(this, "Input new file:");
        try {
            //old file
            String path = jTextField1.getText();
            File myFile = new File(path);
            //new File
            String newpath = myFile.getParent() + "\\" + newFileName;
            File newFile = new File(newpath);

            if (myFile.renameTo(newFile)) {
                JOptionPane.showMessageDialog(this, "file renames success");
                jTextField1.setText(newFile.getAbsolutePath());
            } else {
                JOptionPane.showMessageDialog(this, "file renames fail");
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        writeLog("Thay doi ten file thanh cong" + jTextField1.getText());
    }//GEN-LAST:event_jButtonRenameActionPerformed

    private void jButtonCopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCopyActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            String source = jTextField1.getText();
            File file_1 = new File(source);
            String destination = fileChooser.getSelectedFile().getAbsolutePath();
            File file_2 = new File(destination);
            CopyAllFile(file_1, file_2);

        }
    }//GEN-LAST:event_jButtonCopyActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        // TODO add your handling code here:
        try {
            String path = jTextField1.getText();
            File file = new File(path);
            if (!file.exists()) {
                file.createNewFile();
            }
        }catch(Exception ex){
            
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButtonLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLogActionPerformed
        // TODO add your handling code here:
        ouputLog();
    }//GEN-LAST:event_jButtonLogActionPerformed
    //lấy tất cả dữ liệu từ file in ra màn hình
    public String listFile(String path, int level) {
        File myFile = new File(path);
        String result = "";
        for (int i = 0; i < level; i++) {
            result += "\t";
        }
        if (!myFile.exists()) {
            return "";
        }
        if (myFile.isFile()) {
            return myFile.getName() + "\n";
        }
        for (File f : myFile.listFiles()) {
            result += listFile(f.getAbsolutePath(), level + 1);
        }
        return result;
    }
    //xóa file xóa hết các thư mục con bên trong rồi mới xóa tới thư mục cha

    public void deleteFile(String path) {
        try {
            File file = new File(path);
            if (file.isDirectory()) {
                for (File f : file.listFiles()) {
                    deleteFile(f.getAbsolutePath());
                }
            }
            file.delete();
        } catch (Exception ex) {

        }
    }

    public void CopyAllFile(File f1, File f2) {
        try {
            Files.copy(f1.toPath(), f2.toPath(), StandardCopyOption.REPLACE_EXISTING);

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "no copy");
        }
        if (f1.isDirectory()) {
            for (File f : f1.listFiles()) {
                File newFile = new File(f2.getAbsoluteFile() + "\\" + f.getName());
                CopyAllFile(f, newFile);
            }
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateFile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception ex) {
            ex.printStackTrace();
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreateFile().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButtonCopy;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonLog;
    private javax.swing.JButton jButtonMove;
    private javax.swing.JButton jButtonRename;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables
}
